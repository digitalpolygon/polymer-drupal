docroot: ${repo.root}/web
drupal:
  account:
    # Admin account name and password will be randomly generated unless set here.
    #name: admin
    #pass:
    mail: no-reply@example.com
  site.mail: ${drupal.account.mail}
  locale: en
  local_settings_file: ${docroot}/sites/${site}/settings/local.settings.php
  settings_file: ${docroot}/sites/${site}/settings.php
  profile:
    name: minimal
  drush:
    alias-dir: ${repo.root}/drush/sites
    aliases:
      local: self
      ci: self
    ansi: true
    bin: ${composer.bin}/drush
    default_alias: ${drupal.drush.aliases.local}
    dir: ${docroot}
    sanitize: true
    alias: ${drupal.drush.default_alias}
  multisite:
    sites:
      - default
    exclude-patterns:
      - local.polymer.yml
      - local.drush.yml
      - settings.local.php
      - settings.ddev.php
      - files
  cm:
    # Possible values: core-only, config-split, none.
    strategy: none
    core:
      # The parent directory for configuration directories, relative to the docroot.
      path: ../config
      dirs:
        # Corresponding value is defined in config.settings.php.
        sync:
          path: ${drupal.cm.core.path}/default
      # Install site directly from existing config.
      # This cannot be used if your install profile implements hook_install.
      install_from_config: false
  setup:
    # Valid values are install, sync, import.
    strategy: install
    # If setup.strategy is import, this file will be imported. File path is
    # relative to drupal docroot directory.
    dump-file: null
    # Arguments to pass to drush si.
    install-args: "install_configure_form.enable_update_status_module=NULL"
  sync:
    # By default, files are not synced during sync:refresh.
    # Set this value to 'true' or pass -D sync.public-files=true
    # to override this behavior.
    public-files: false
    private-files: false
    # Paths to exclude during file syncing operations.
    exclude-paths:
      - styles
      - css
      - js
    commands:
      - drupal:site:sync:database
      - drupal:site:sync:files
      - drupal:site:sync:private-files
      # To make sure that the states between local and remote are as close to identical as possible before running an update operation.
      # That's why files needs to be synchronized locally first.
      # Command order can be changed as per the need in custom polymer.config file.
      - drupal:update
  # Provide a list of sites for Polymer to run commands against.
  # multisites:
  #  - default
